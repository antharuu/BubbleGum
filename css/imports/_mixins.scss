@import 'configuration';
@import 'variables';
@import 'functions';

@mixin font-face($name, $file) {
  $dir: 'fonts/';

  @font-face {
    font-family: "#{$name}";
    src: url("#{$dir}#{$file}.eot");
    src: url("#{$dir}#{$file}.eot?#iefix") format('embedded-opentype'),
    url("#{$dir}#{$file}.woff") format('woff'),
    url("#{$dir}#{$file}.ttf") format('truetype'),
    url("#{$dir}#{$file}.svg?#webfont") format('svg');
  }
}

@mixin add-breakpoints {
  @content('');

  @if $CONFIG_breakpoints {
    @each $b-name, $size in $GRID-breakpoints {
      @media screen and (min-width: $size) {
        @content($b-name);
      }
    }
  }
}

@mixin add-logic {
  @for $i from 0 through $CONFIG_logic_max {
    @content($i);
  }
}

@mixin add-color {
  @each $c-name, $color in $COLORS-all {
    @content($c-name);
  }
}

@mixin colorised($selector, $size: '') {
  @include add-color using($color) {
    &#{selector($selector, $color, $size)} {
      background-color: color-value($color);
      border-color: color-value($color);
      color: visible-color(color-value($color,)) !important;

      * {
        color: visible-color(color-value($color,)) !important;
      }
    }

    @if $CONFIG_colors_variants {
      @include add-logic using($i) {
        &#{selector($selector, '#{$color}-light-#{$i}', $size)} {
          background-color: color-value($color, $i, true);
          border-color: color-value($color, $i, true);
          color: visible-color(color-value($color, $i, false)) !important;

          * {
            color: visible-color(color-value($color,)) !important;
          }
        }
      }
      @include add-logic using($i) {
        &#{selector($selector, '#{$color}-dark-#{$i}', $size)} {
          background-color: color-value($color, $i, false);
          border-color: color-value($color, $i, false);
          color: visible-color(color-value($color, $i, false)) !important;

          * {
            color: visible-color(color-value($color,)) !important;
          }
        }
      }
    }
  }
}